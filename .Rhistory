Ytest=predict(trainsvm,Xtest,type="response")
plot(Xtest,col=c("red", "blue")[1+Ytest])
rezolution=200
GRID=expand.grid(X=seq(-4,10,length=rezolution),Y=seq(-4,10,length=rezolution))
par(mfrow=c(1,1))
YGRID=predict(trainsvm,newdata=GRID,type="response")
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "black")[1+Ytest])
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("yellow", "black")[1+Ytest])
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("green", "black")[1+Ytest])
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "black")[1+Ytest])
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest])
GRID=expand.grid(X=seq(-5,10,length=rezolution),Y=seq(-5,10,length=rezolution))
par(mfrow=c(1,1))
YGRID=predict(trainsvm,newdata=GRID,type="response")
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest])
rezolution=200
GRID=expand.grid(X=seq(-10,10,length=rezolution),Y=seq(-10,10,length=rezolution))
par(mfrow=c(1,1))
YGRID=predict(trainsvm,newdata=GRID,type="response")
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest])
?points
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest],type = "p")
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest],pch = 19)
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest],pch = c(15:19))
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest],pch = 9)
X1=rbind(X,cbind(rnorm(n,sd=sd)+a, rnorm(n,sd=sd)+0))
X2=rbind(X,cbind(rnorm(n,sd=sd)-a, rnorm(n,sd=sd)+0))
X3=rbind(X,cbind(rnorm(n,sd=sd)+0, rnorm(n,sd=sd)+b))
X4=rbind(X,cbind(rnorm(n,sd=sd)+0, rnorm(n,sd=sd)-b))
X=rbind(X1,X2,X3,X4)
Y=as.factor(c(rep(1, 2*n),rep(-1, 2*n)  ))
Y=as.factor(rep(1, 4*n))
#plot(X,col=c("red","blue")[as.numeric(Y)])
plot(X)
Xtrain=rbind(X1,X2,X3,X4)
trainsvm = ksvm(Xtrain,Y, kernel= "rbfdot", kpar=list(sigma=1), type="one-svc",
cross=5 ,nu=0.01);trainsvm
error(trainsvm)
cross(trainsvm)
Ytrain = predict(trainsvm,newdata=Xtrain)
plot(Xtrain,col=c("red", "blue")[1+Ytrain])
Xtest=rbind(Xtrain,c(10,10))
plot(Xtest)
Ytest=predict(trainsvm,Xtest,type="response")
plot(Xtest,col=c("red", "blue")[1+Ytest])
rezolution=200
GRID=expand.grid(X=seq(-10,10,length=rezolution),Y=seq(-10,10,length=rezolution))
par(mfrow=c(1,1))
YGRID=predict(trainsvm,newdata=GRID,type="response")
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest],pch = 9)
trainsvm = ksvm(Xtrain,Y, kernel= "rbfdot", kpar=list(sigma=1/10), type="one-svc",
cross=5 ,nu=0.2);trainsvm
#jour sur kpar et nu
error(trainsvm)
cross(trainsvm)
Ytrain = predict(trainsvm,newdata=Xtrain)
plot(Xtrain,col=c("red", "blue")[1+Ytrain])
Xtest=rbind(Xtrain,c(10,10))
plot(Xtest)
Ytest=predict(trainsvm,Xtest,type="response")
plot(Xtest,col=c("red", "blue")[1+Ytest])
rezolution=200
GRID=expand.grid(X=seq(-10,10,length=rezolution),Y=seq(-10,10,length=rezolution))
par(mfrow=c(1,1))
YGRID=predict(trainsvm,newdata=GRID,type="response")
plot(GRID,col=c("cyan", "bisque1")[1+YGRID])
points(Xtest,col=c("red", "blue")[1+Ytest],pch = 4)
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#####################################
par(mfrow=c(2,2))
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot", kpar=list(sigma=0.05),cross=5,nu=0.001)
classifier
#####################################
par(mfrow=c(2,2))
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot", kpar=list(sigma=0.05),cross=5,nu=0.001)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#################################################################################################################################
#################################################################################################################################
#################################################################################################################################
#####################################
par(mfrow=c(2,2))
# test example from web
# Training data
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot", kpar=list(sigma=0.05),cross=5,nu=0.001)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#################################################################################################################################
#################################################################################################################################
#################################################################################################################################
#####################################
par(mfrow=c(2,2))
# test example from web
# Training data
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot",
kpar=list(sigma=1/10),cross=5,nu=0.02)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
# Visualization
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
##############################################
# Prediction sur pTrain
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
##############################################
# Prediction sur pTest
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#################################################################################################################################
#################################################################################################################################
#################################################################################################################################
#####################################
par(mfrow=c(2,2))
# test example from web
# Training data
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot",
kpar=list(sigma=1/10),cross=5,nu=0.2)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
# Visualization
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
##############################################
# Prediction sur pTrain
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
##############################################
# Prediction sur pTest
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#################################################################################################################################
#################################################################################################################################
#################################################################################################################################
#####################################
par(mfrow=c(2,2))
# test example from web
# Training data
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot",
kpar=list(sigma=1),cross=5,nu=0.2)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
# Visualization
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
##############################################
# Prediction sur pTrain
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
##############################################
# Prediction sur pTest
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
par(mfrow=c(2,2))
# Visualization
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##############################################
# Prediction sur pTrain
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
##############################################
# Prediction sur pTest
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#################################################################################################################################
#################################################################################################################################
#################################################################################################################################
#####################################
par(mfrow=c(2,2))
# test example from web
# Training data
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot",
kpar=list(sigma=1/5),cross=5,nu=0.2)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
# Visualization
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
##############################################
# Prediction sur pTrain
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
##############################################
# Prediction sur pTest
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#################################################################################################################################
#################################################################################################################################
#################################################################################################################################
#####################################
par(mfrow=c(2,2))
# test example from web
# Training data
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot",
kpar=list(sigma=1/10),cross=5,nu=0.2)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
# Visualization
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
##############################################
# Prediction sur pTrain
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
##############################################
# Prediction sur pTest
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
##########################################################
# The package "kernlab"
##########################################################
##########################################################
# To install the package "kernlab" execute:
# En R cliquer: "Packages" ->  Installer le(s) package(s) -> [...France (Lyon2)...] -> kernlab
#
library("kernlab")  # connect library
#################################################################################################################################
#################################################################################################################################
#################################################################################################################################
#####################################
par(mfrow=c(2,2))
# test example from web
# Training data
x1 <- rnorm(1000)
x2 <- rnorm(1000)
xxTrain <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
par(mfrow=c(2,2))
plot(xxTrain[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTrain[,2], col="grey", ylim=c(-5,5),type="l")
y=rep(1, length(x1))
classifier <- ksvm(xxTrain, y,  type="one-svc", kernel="rbfdot",
kpar=list(sigma=1/50),cross=5,nu=0.2)
classifier
# Test data
x1 <- rnorm(1000)
scale <- c(rep(1,500), rep(4,50), rep(1,450))
x2 <- rnorm(1000)*scale
xxTest <- matrix(c(x1,x2), nrow=1000, ncol=2, byrow=F)
# Visualisation
#plot(xxTest)
plot(xxTest[,1], col="cyan", ylim=c(-5,5),type="l")
plot(xxTest[,2], col="grey", ylim=c(-5,5),type="l")
# Prediction
pTest <- predict(classifier,newdata = xxTest, type="response")
par(mfrow=c(2,2))
# Visualization
plot(x1, type='l', col="cyan", ylim=c(-5,5))
plot(x2, type='l',col="grey", ylim=c(-5,5))
#points(5*as.integer(pTest), type='l', col="blue")
plot(as.integer(pTest), type='p', col="blue")
##############################################
# Prediction sur pTrain
par(mfrow=c(2,2))
pTrain <- predict(classifier, xxTrain, type="response")
plot(xxTrain,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","grey")[1+pTrain], main="Prediction for training data")
##############################################
# Prediction sur pTest
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],main="Prediction for test data")
grille.geom=function(a,b,size){
m=size
q=exp((log(b)-log(a))/(m-1))
q^(0:(m-1))*a
}
plot(xxTest,xlim=c(-5,5),ylim=c(-5,5),col=c("cyan","gray")[1+pTest],
main="Prediction for test data")
grille.geom=function(a,b,size){
m=size
q=exp((log(b)-log(a))/(m-1))
q^(0:(m-1))*a
}
HH=grille.geom(1,0.00001,100)
M=length(HH)
CROSS=NULL
for (i in 1:M){
set.seed(2345678)
classifier=ksvm(xxTrain,y,type="one-svc",kernel="rbfdot",
kpar=list(sigma=1/HH[i]),cross=5,nu=0.2)
CROSS[i]=cross(classifier)
}
dev.off()
par(mfrow=c(1,1))
plot(log(HH),CROSS)
